"use strict";
/**
 * Fireblocks API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.2
 * Contact: support@fireblocks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var base_1 = require("../base");
var validation_utils_1 = require("../utils/validation_utils");
describe('Validation Utils Tests', function () {
    describe('assertParamExistsAndNotEmpty tests', function () {
        it('Should throw RequiredError when paramValue is empty', function () {
            var functionName = 'testFunction';
            var paramName = 'testParam';
            var paramValue = '';
            var expectedError = new base_1.RequiredError(paramName, "The required parameter '".concat(paramName, "' was empty when calling '").concat(functionName, "'."));
            expect(function () { return (0, validation_utils_1.assertParamExistsAndNotEmpty)(functionName, paramName, paramValue); }).toThrow(expectedError);
        });
        it('Should not throw any error when paramValue is not empty', function () {
            var functionName = 'testFunction';
            var paramName = 'testParam';
            var paramValue = 'testValue';
            expect(function () { return (0, validation_utils_1.assertParamExistsAndNotEmpty)(functionName, paramName, paramValue); }).not.toThrow();
        });
    });
});
//# sourceMappingURL=validation_utils.spec.js.map