/**
 * Fireblocks API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.2
 * Contact: support@fireblocks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from '../configuration';
import type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios';
import { RequestArgs, BaseAPI } from '../base';
import { ApiKey } from '../models';
import { ApiKeysPaginatedResponse } from '../models';
import { Cosigner } from '../models';
import { CosignersPaginatedResponse } from '../models';
import { RenameCosigner } from '../models';
/**
 * CosignersBetaApi - axios parameter creator
 * @export
 */
export declare const CosignersBetaApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Get an API key by ID **Note:** These endpoints are currently in beta and might be subject to changes.
     * @summary Get API key
     * @param {string} cosignerId The unique identifier of the cosigner
     * @param {string} apiKeyId The unique identifier of the API key
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getApiKey: (cosignerId: string, apiKeyId: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get all cosigner paired API keys (paginated) **Note:** These endpoints are currently in beta and might be subject to changes.
     * @summary Get all API keys
     * @param {string} cosignerId The unique identifier of the cosigner
     * @param {GetApiKeysOrderEnum} [order] ASC / DESC ordering (default DESC)
     * @param {string} [pageCursor] Cursor of the required page
     * @param {number} [pageSize] Maximum number of items in the page
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getApiKeys: (cosignerId: string, order?: GetApiKeysOrderEnum, pageCursor?: string, pageSize?: number, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get a cosigner by ID **Note:** These endpoints are currently in beta and might be subject to changes.
     * @summary Get cosigner
     * @param {string} cosignerId The unique identifier of the cosigner
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCosigner: (cosignerId: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get all workspace cosigners (paginated) **Note:** These endpoints are currently in beta and might be subject to changes.
     * @summary Get all cosigners
     * @param {GetCosignersOrderEnum} [order] ASC / DESC ordering (default DESC)
     * @param {string} [pageCursor] Cursor of the required page
     * @param {number} [pageSize] Maximum number of items in the page
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCosigners: (order?: GetCosignersOrderEnum, pageCursor?: string, pageSize?: number, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Rename a cosigner by ID **Note:** These endpoints are currently in beta and might be subject to changes.
     * @summary Rename cosigner
     * @param {RenameCosigner} renameCosigner
     * @param {string} cosignerId The unique identifier of the cosigner
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    renameCosigner: (renameCosigner: RenameCosigner, cosignerId: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * CosignersBetaApi - functional programming interface
 * @export
 */
export declare const CosignersBetaApiFp: (configuration?: Configuration) => {
    /**
     * Get an API key by ID **Note:** These endpoints are currently in beta and might be subject to changes.
     * @summary Get API key
     * @param {string} cosignerId The unique identifier of the cosigner
     * @param {string} apiKeyId The unique identifier of the API key
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getApiKey(cosignerId: string, apiKeyId: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ApiKey>>;
    /**
     * Get all cosigner paired API keys (paginated) **Note:** These endpoints are currently in beta and might be subject to changes.
     * @summary Get all API keys
     * @param {string} cosignerId The unique identifier of the cosigner
     * @param {GetApiKeysOrderEnum} [order] ASC / DESC ordering (default DESC)
     * @param {string} [pageCursor] Cursor of the required page
     * @param {number} [pageSize] Maximum number of items in the page
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getApiKeys(cosignerId: string, order?: GetApiKeysOrderEnum, pageCursor?: string, pageSize?: number, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ApiKeysPaginatedResponse>>;
    /**
     * Get a cosigner by ID **Note:** These endpoints are currently in beta and might be subject to changes.
     * @summary Get cosigner
     * @param {string} cosignerId The unique identifier of the cosigner
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCosigner(cosignerId: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Cosigner>>;
    /**
     * Get all workspace cosigners (paginated) **Note:** These endpoints are currently in beta and might be subject to changes.
     * @summary Get all cosigners
     * @param {GetCosignersOrderEnum} [order] ASC / DESC ordering (default DESC)
     * @param {string} [pageCursor] Cursor of the required page
     * @param {number} [pageSize] Maximum number of items in the page
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCosigners(order?: GetCosignersOrderEnum, pageCursor?: string, pageSize?: number, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CosignersPaginatedResponse>>;
    /**
     * Rename a cosigner by ID **Note:** These endpoints are currently in beta and might be subject to changes.
     * @summary Rename cosigner
     * @param {RenameCosigner} renameCosigner
     * @param {string} cosignerId The unique identifier of the cosigner
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    renameCosigner(renameCosigner: RenameCosigner, cosignerId: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Cosigner>>;
};
/**
 * CosignersBetaApi - factory interface
 * @export
 */
export declare const CosignersBetaApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Get an API key by ID **Note:** These endpoints are currently in beta and might be subject to changes.
     * @summary Get API key
     * @param {CosignersBetaApiGetApiKeyRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getApiKey(requestParameters: CosignersBetaApiGetApiKeyRequest, options?: RawAxiosRequestConfig): AxiosPromise<ApiKey>;
    /**
     * Get all cosigner paired API keys (paginated) **Note:** These endpoints are currently in beta and might be subject to changes.
     * @summary Get all API keys
     * @param {CosignersBetaApiGetApiKeysRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getApiKeys(requestParameters: CosignersBetaApiGetApiKeysRequest, options?: RawAxiosRequestConfig): AxiosPromise<ApiKeysPaginatedResponse>;
    /**
     * Get a cosigner by ID **Note:** These endpoints are currently in beta and might be subject to changes.
     * @summary Get cosigner
     * @param {CosignersBetaApiGetCosignerRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCosigner(requestParameters: CosignersBetaApiGetCosignerRequest, options?: RawAxiosRequestConfig): AxiosPromise<Cosigner>;
    /**
     * Get all workspace cosigners (paginated) **Note:** These endpoints are currently in beta and might be subject to changes.
     * @summary Get all cosigners
     * @param {CosignersBetaApiGetCosignersRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCosigners(requestParameters?: CosignersBetaApiGetCosignersRequest, options?: RawAxiosRequestConfig): AxiosPromise<CosignersPaginatedResponse>;
    /**
     * Rename a cosigner by ID **Note:** These endpoints are currently in beta and might be subject to changes.
     * @summary Rename cosigner
     * @param {CosignersBetaApiRenameCosignerRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    renameCosigner(requestParameters: CosignersBetaApiRenameCosignerRequest, options?: RawAxiosRequestConfig): AxiosPromise<Cosigner>;
};
/**
 * Request parameters for getApiKey operation in CosignersBetaApi.
 * @export
 * @interface CosignersBetaApiGetApiKeyRequest
 */
export interface CosignersBetaApiGetApiKeyRequest {
    /**
     * The unique identifier of the cosigner
     * @type {string}
     * @memberof CosignersBetaApiGetApiKey
     */
    readonly cosignerId: string;
    /**
     * The unique identifier of the API key
     * @type {string}
     * @memberof CosignersBetaApiGetApiKey
     */
    readonly apiKeyId: string;
}
/**
 * Request parameters for getApiKeys operation in CosignersBetaApi.
 * @export
 * @interface CosignersBetaApiGetApiKeysRequest
 */
export interface CosignersBetaApiGetApiKeysRequest {
    /**
     * The unique identifier of the cosigner
     * @type {string}
     * @memberof CosignersBetaApiGetApiKeys
     */
    readonly cosignerId: string;
    /**
     * ASC / DESC ordering (default DESC)
     * @type {'ASC' | 'DESC'}
     * @memberof CosignersBetaApiGetApiKeys
     */
    readonly order?: GetApiKeysOrderEnum;
    /**
     * Cursor of the required page
     * @type {string}
     * @memberof CosignersBetaApiGetApiKeys
     */
    readonly pageCursor?: string;
    /**
     * Maximum number of items in the page
     * @type {number}
     * @memberof CosignersBetaApiGetApiKeys
     */
    readonly pageSize?: number;
}
/**
 * Request parameters for getCosigner operation in CosignersBetaApi.
 * @export
 * @interface CosignersBetaApiGetCosignerRequest
 */
export interface CosignersBetaApiGetCosignerRequest {
    /**
     * The unique identifier of the cosigner
     * @type {string}
     * @memberof CosignersBetaApiGetCosigner
     */
    readonly cosignerId: string;
}
/**
 * Request parameters for getCosigners operation in CosignersBetaApi.
 * @export
 * @interface CosignersBetaApiGetCosignersRequest
 */
export interface CosignersBetaApiGetCosignersRequest {
    /**
     * ASC / DESC ordering (default DESC)
     * @type {'ASC' | 'DESC'}
     * @memberof CosignersBetaApiGetCosigners
     */
    readonly order?: GetCosignersOrderEnum;
    /**
     * Cursor of the required page
     * @type {string}
     * @memberof CosignersBetaApiGetCosigners
     */
    readonly pageCursor?: string;
    /**
     * Maximum number of items in the page
     * @type {number}
     * @memberof CosignersBetaApiGetCosigners
     */
    readonly pageSize?: number;
}
/**
 * Request parameters for renameCosigner operation in CosignersBetaApi.
 * @export
 * @interface CosignersBetaApiRenameCosignerRequest
 */
export interface CosignersBetaApiRenameCosignerRequest {
    /**
     *
     * @type {RenameCosigner}
     * @memberof CosignersBetaApiRenameCosigner
     */
    readonly renameCosigner: RenameCosigner;
    /**
     * The unique identifier of the cosigner
     * @type {string}
     * @memberof CosignersBetaApiRenameCosigner
     */
    readonly cosignerId: string;
}
/**
 * CosignersBetaApi - object-oriented interface
 * @export
 * @class CosignersBetaApi
 * @extends {BaseAPI}
 */
export declare class CosignersBetaApi extends BaseAPI {
    /**
     * Get an API key by ID **Note:** These endpoints are currently in beta and might be subject to changes.
     * @summary Get API key
     * @param {CosignersBetaApiGetApiKeyRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CosignersBetaApi
     */
    getApiKey(requestParameters: CosignersBetaApiGetApiKeyRequest): Promise<import("../response/fireblocksResponse").FireblocksResponse<ApiKey>>;
    /**
     * Get all cosigner paired API keys (paginated) **Note:** These endpoints are currently in beta and might be subject to changes.
     * @summary Get all API keys
     * @param {CosignersBetaApiGetApiKeysRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CosignersBetaApi
     */
    getApiKeys(requestParameters: CosignersBetaApiGetApiKeysRequest): Promise<import("../response/fireblocksResponse").FireblocksResponse<ApiKeysPaginatedResponse>>;
    /**
     * Get a cosigner by ID **Note:** These endpoints are currently in beta and might be subject to changes.
     * @summary Get cosigner
     * @param {CosignersBetaApiGetCosignerRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CosignersBetaApi
     */
    getCosigner(requestParameters: CosignersBetaApiGetCosignerRequest): Promise<import("../response/fireblocksResponse").FireblocksResponse<Cosigner>>;
    /**
     * Get all workspace cosigners (paginated) **Note:** These endpoints are currently in beta and might be subject to changes.
     * @summary Get all cosigners
     * @param {CosignersBetaApiGetCosignersRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CosignersBetaApi
     */
    getCosigners(requestParameters?: CosignersBetaApiGetCosignersRequest): Promise<import("../response/fireblocksResponse").FireblocksResponse<CosignersPaginatedResponse>>;
    /**
     * Rename a cosigner by ID **Note:** These endpoints are currently in beta and might be subject to changes.
     * @summary Rename cosigner
     * @param {CosignersBetaApiRenameCosignerRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CosignersBetaApi
     */
    renameCosigner(requestParameters: CosignersBetaApiRenameCosignerRequest): Promise<import("../response/fireblocksResponse").FireblocksResponse<Cosigner>>;
}
/**
 * @export
 */
export declare const GetApiKeysOrderEnum: {
    readonly Asc: "ASC";
    readonly Desc: "DESC";
};
export type GetApiKeysOrderEnum = typeof GetApiKeysOrderEnum[keyof typeof GetApiKeysOrderEnum];
/**
 * @export
 */
export declare const GetCosignersOrderEnum: {
    readonly Asc: "ASC";
    readonly Desc: "DESC";
};
export type GetCosignersOrderEnum = typeof GetCosignersOrderEnum[keyof typeof GetCosignersOrderEnum];
