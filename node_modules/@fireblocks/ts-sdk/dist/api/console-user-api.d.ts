/**
 * Fireblocks API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.2
 * Contact: support@fireblocks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from '../configuration';
import type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios';
import { RequestArgs, BaseAPI } from '../base';
import { CreateConsoleUser } from '../models';
import { GetConsoleUsersResponse } from '../models';
/**
 * ConsoleUserApi - axios parameter creator
 * @export
 */
export declare const ConsoleUserApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Creates console user in your tenant
     * @summary Create console user
     * @param {CreateConsoleUser} [createConsoleUser]
     * @param {string} [idempotencyKey] A unique identifier for the request. If the request is sent multiple times with the same idempotency key, the server will return the same response as the first request. The idempotency key is valid for 24 hours.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createConsoleUser: (createConsoleUser?: CreateConsoleUser, idempotencyKey?: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get console users for your tenant
     * @summary Get console users
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getConsoleUsers: (options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * ConsoleUserApi - functional programming interface
 * @export
 */
export declare const ConsoleUserApiFp: (configuration?: Configuration) => {
    /**
     * Creates console user in your tenant
     * @summary Create console user
     * @param {CreateConsoleUser} [createConsoleUser]
     * @param {string} [idempotencyKey] A unique identifier for the request. If the request is sent multiple times with the same idempotency key, the server will return the same response as the first request. The idempotency key is valid for 24 hours.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createConsoleUser(createConsoleUser?: CreateConsoleUser, idempotencyKey?: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     * Get console users for your tenant
     * @summary Get console users
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getConsoleUsers(options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetConsoleUsersResponse>>;
};
/**
 * ConsoleUserApi - factory interface
 * @export
 */
export declare const ConsoleUserApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Creates console user in your tenant
     * @summary Create console user
     * @param {ConsoleUserApiCreateConsoleUserRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createConsoleUser(requestParameters?: ConsoleUserApiCreateConsoleUserRequest, options?: RawAxiosRequestConfig): AxiosPromise<void>;
    /**
     * Get console users for your tenant
     * @summary Get console users
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getConsoleUsers(options?: RawAxiosRequestConfig): AxiosPromise<GetConsoleUsersResponse>;
};
/**
 * Request parameters for createConsoleUser operation in ConsoleUserApi.
 * @export
 * @interface ConsoleUserApiCreateConsoleUserRequest
 */
export interface ConsoleUserApiCreateConsoleUserRequest {
    /**
     *
     * @type {CreateConsoleUser}
     * @memberof ConsoleUserApiCreateConsoleUser
     */
    readonly createConsoleUser?: CreateConsoleUser;
    /**
     * A unique identifier for the request. If the request is sent multiple times with the same idempotency key, the server will return the same response as the first request. The idempotency key is valid for 24 hours.
     * @type {string}
     * @memberof ConsoleUserApiCreateConsoleUser
     */
    readonly idempotencyKey?: string;
}
/**
 * ConsoleUserApi - object-oriented interface
 * @export
 * @class ConsoleUserApi
 * @extends {BaseAPI}
 */
export declare class ConsoleUserApi extends BaseAPI {
    /**
     * Creates console user in your tenant
     * @summary Create console user
     * @param {ConsoleUserApiCreateConsoleUserRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ConsoleUserApi
     */
    createConsoleUser(requestParameters?: ConsoleUserApiCreateConsoleUserRequest): Promise<import("../response/fireblocksResponse").FireblocksResponse<void>>;
    /**
     * Get console users for your tenant
     * @summary Get console users
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ConsoleUserApi
     */
    getConsoleUsers(): Promise<import("../response/fireblocksResponse").FireblocksResponse<GetConsoleUsersResponse>>;
}
