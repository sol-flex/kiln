/**
 * Fireblocks API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.2
 * Contact: support@fireblocks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from '../configuration';
import type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios';
import { RequestArgs, BaseAPI } from '../base';
import { AssetPriceResponse } from '../models';
import { AssetResponse } from '../models';
import { GetSupportedAssetsResponse } from '../models';
import { RegisterNewAssetRequest } from '../models';
import { SetAssetPriceRequest } from '../models';
/**
 * BlockchainsAssetsApi - axios parameter creator
 * @export
 */
export declare const BlockchainsAssetsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Returns all asset types supported by Fireblocks.
     * @summary List all asset types supported by Fireblocks
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSupportedAssets: (options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Register a new asset to a workspace and return the newly created asset\'s details. Currently supported chains are: - EVM based chains - Stellar - Algorand - TRON - NEAR - Solana
     * @summary Register an asset
     * @param {RegisterNewAssetRequest} [registerNewAssetRequest]
     * @param {string} [idempotencyKey] A unique identifier for the request. If the request is sent multiple times with the same idempotency key, the server will return the same response as the first request. The idempotency key is valid for 24 hours.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    registerNewAsset: (registerNewAssetRequest?: RegisterNewAssetRequest, idempotencyKey?: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Set asset price for the given asset id. Returns the asset price response.
     * @summary Set asset price
     * @param {string} id The ID of the asset
     * @param {SetAssetPriceRequest} [setAssetPriceRequest]
     * @param {string} [idempotencyKey] A unique identifier for the request. If the request is sent multiple times with the same idempotency key, the server will return the same response as the first request. The idempotency key is valid for 24 hours.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    setAssetPrice: (id: string, setAssetPriceRequest?: SetAssetPriceRequest, idempotencyKey?: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * BlockchainsAssetsApi - functional programming interface
 * @export
 */
export declare const BlockchainsAssetsApiFp: (configuration?: Configuration) => {
    /**
     * Returns all asset types supported by Fireblocks.
     * @summary List all asset types supported by Fireblocks
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSupportedAssets(options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetSupportedAssetsResponse>>;
    /**
     * Register a new asset to a workspace and return the newly created asset\'s details. Currently supported chains are: - EVM based chains - Stellar - Algorand - TRON - NEAR - Solana
     * @summary Register an asset
     * @param {RegisterNewAssetRequest} [registerNewAssetRequest]
     * @param {string} [idempotencyKey] A unique identifier for the request. If the request is sent multiple times with the same idempotency key, the server will return the same response as the first request. The idempotency key is valid for 24 hours.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    registerNewAsset(registerNewAssetRequest?: RegisterNewAssetRequest, idempotencyKey?: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<AssetResponse>>;
    /**
     * Set asset price for the given asset id. Returns the asset price response.
     * @summary Set asset price
     * @param {string} id The ID of the asset
     * @param {SetAssetPriceRequest} [setAssetPriceRequest]
     * @param {string} [idempotencyKey] A unique identifier for the request. If the request is sent multiple times with the same idempotency key, the server will return the same response as the first request. The idempotency key is valid for 24 hours.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    setAssetPrice(id: string, setAssetPriceRequest?: SetAssetPriceRequest, idempotencyKey?: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<AssetPriceResponse>>;
};
/**
 * BlockchainsAssetsApi - factory interface
 * @export
 */
export declare const BlockchainsAssetsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Returns all asset types supported by Fireblocks.
     * @summary List all asset types supported by Fireblocks
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSupportedAssets(options?: RawAxiosRequestConfig): AxiosPromise<GetSupportedAssetsResponse>;
    /**
     * Register a new asset to a workspace and return the newly created asset\'s details. Currently supported chains are: - EVM based chains - Stellar - Algorand - TRON - NEAR - Solana
     * @summary Register an asset
     * @param {BlockchainsAssetsApiRegisterNewAssetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    registerNewAsset(requestParameters?: BlockchainsAssetsApiRegisterNewAssetRequest, options?: RawAxiosRequestConfig): AxiosPromise<AssetResponse>;
    /**
     * Set asset price for the given asset id. Returns the asset price response.
     * @summary Set asset price
     * @param {BlockchainsAssetsApiSetAssetPriceRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    setAssetPrice(requestParameters: BlockchainsAssetsApiSetAssetPriceRequest, options?: RawAxiosRequestConfig): AxiosPromise<AssetPriceResponse>;
};
/**
 * Request parameters for registerNewAsset operation in BlockchainsAssetsApi.
 * @export
 * @interface BlockchainsAssetsApiRegisterNewAssetRequest
 */
export interface BlockchainsAssetsApiRegisterNewAssetRequest {
    /**
     *
     * @type {RegisterNewAssetRequest}
     * @memberof BlockchainsAssetsApiRegisterNewAsset
     */
    readonly registerNewAssetRequest?: RegisterNewAssetRequest;
    /**
     * A unique identifier for the request. If the request is sent multiple times with the same idempotency key, the server will return the same response as the first request. The idempotency key is valid for 24 hours.
     * @type {string}
     * @memberof BlockchainsAssetsApiRegisterNewAsset
     */
    readonly idempotencyKey?: string;
}
/**
 * Request parameters for setAssetPrice operation in BlockchainsAssetsApi.
 * @export
 * @interface BlockchainsAssetsApiSetAssetPriceRequest
 */
export interface BlockchainsAssetsApiSetAssetPriceRequest {
    /**
     * The ID of the asset
     * @type {string}
     * @memberof BlockchainsAssetsApiSetAssetPrice
     */
    readonly id: string;
    /**
     *
     * @type {SetAssetPriceRequest}
     * @memberof BlockchainsAssetsApiSetAssetPrice
     */
    readonly setAssetPriceRequest?: SetAssetPriceRequest;
    /**
     * A unique identifier for the request. If the request is sent multiple times with the same idempotency key, the server will return the same response as the first request. The idempotency key is valid for 24 hours.
     * @type {string}
     * @memberof BlockchainsAssetsApiSetAssetPrice
     */
    readonly idempotencyKey?: string;
}
/**
 * BlockchainsAssetsApi - object-oriented interface
 * @export
 * @class BlockchainsAssetsApi
 * @extends {BaseAPI}
 */
export declare class BlockchainsAssetsApi extends BaseAPI {
    /**
     * Returns all asset types supported by Fireblocks.
     * @summary List all asset types supported by Fireblocks
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BlockchainsAssetsApi
     */
    getSupportedAssets(): Promise<import("../response/fireblocksResponse").FireblocksResponse<GetSupportedAssetsResponse>>;
    /**
     * Register a new asset to a workspace and return the newly created asset\'s details. Currently supported chains are: - EVM based chains - Stellar - Algorand - TRON - NEAR - Solana
     * @summary Register an asset
     * @param {BlockchainsAssetsApiRegisterNewAssetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BlockchainsAssetsApi
     */
    registerNewAsset(requestParameters?: BlockchainsAssetsApiRegisterNewAssetRequest): Promise<import("../response/fireblocksResponse").FireblocksResponse<AssetResponse>>;
    /**
     * Set asset price for the given asset id. Returns the asset price response.
     * @summary Set asset price
     * @param {BlockchainsAssetsApiSetAssetPriceRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BlockchainsAssetsApi
     */
    setAssetPrice(requestParameters: BlockchainsAssetsApiSetAssetPriceRequest): Promise<import("../response/fireblocksResponse").FireblocksResponse<AssetPriceResponse>>;
}
