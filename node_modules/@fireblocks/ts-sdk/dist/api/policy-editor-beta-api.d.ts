/**
 * Fireblocks API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.2
 * Contact: support@fireblocks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from '../configuration';
import type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios';
import { RequestArgs, BaseAPI } from '../base';
import { DraftReviewAndValidationResponse } from '../models';
import { PolicyAndValidationResponse } from '../models';
import { PolicyRules } from '../models';
import { PublishDraftRequest } from '../models';
import { PublishResult } from '../models';
/**
 * PolicyEditorBetaApi - axios parameter creator
 * @export
 */
export declare const PolicyEditorBetaApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Returns the active policy and its validation. </br> **Note:** These endpoints are currently in beta and might be subject to changes. If you want to participate and learn more about the Fireblocks TAP, please contact your Fireblocks Customer Success Manager or send an email to CSM@fireblocks.com.
     * @summary Get the active policy and its validation
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getActivePolicy: (options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Returns the active draft and its validation. </br> **Note:** These endpoints are currently in beta and might be subject to changes. If you want to participate and learn more about the Fireblocks TAP, please contact your Fireblocks Customer Success Manager or send an email to CSM@fireblocks.com.
     * @summary Get the active draft
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getDraft: (options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Send publish request of certain draft id and returns the response. </br> **Note:** These endpoints are currently in beta and might be subject to changes. If you want to participate and learn more about the Fireblocks TAP, please contact your Fireblocks Customer Success Manager or send an email to CSM@fireblocks.com.
     * @summary Send publish request for a certain draft id
     * @param {PublishDraftRequest} publishDraftRequest
     * @param {string} [idempotencyKey] A unique identifier for the request. If the request is sent multiple times with the same idempotency key, the server will return the same response as the first request. The idempotency key is valid for 24 hours.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    publishDraft: (publishDraftRequest: PublishDraftRequest, idempotencyKey?: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Send publish request of set of policy rules and returns the response. </br> **Note:** These endpoints are currently in beta and might be subject to changes. If you want to participate and learn more about the Fireblocks TAP, please contact your Fireblocks Customer Success Manager or send an email to CSM@fireblocks.com.
     * @summary Send publish request for a set of policy rules
     * @param {PolicyRules} policyRules
     * @param {string} [idempotencyKey] A unique identifier for the request. If the request is sent multiple times with the same idempotency key, the server will return the same response as the first request. The idempotency key is valid for 24 hours.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    publishPolicyRules: (policyRules: PolicyRules, idempotencyKey?: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Update the draft and return its validation. </br> **Note:** These endpoints are currently in beta and might be subject to changes. If you want to participate and learn more about the Fireblocks TAP, please contact your Fireblocks Customer Success Manager or send an email to CSM@fireblocks.com.
     * @summary Update the draft with a new set of rules
     * @param {PolicyRules} policyRules
     * @param {string} [idempotencyKey] A unique identifier for the request. If the request is sent multiple times with the same idempotency key, the server will return the same response as the first request. The idempotency key is valid for 24 hours.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateDraft: (policyRules: PolicyRules, idempotencyKey?: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * PolicyEditorBetaApi - functional programming interface
 * @export
 */
export declare const PolicyEditorBetaApiFp: (configuration?: Configuration) => {
    /**
     * Returns the active policy and its validation. </br> **Note:** These endpoints are currently in beta and might be subject to changes. If you want to participate and learn more about the Fireblocks TAP, please contact your Fireblocks Customer Success Manager or send an email to CSM@fireblocks.com.
     * @summary Get the active policy and its validation
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getActivePolicy(options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PolicyAndValidationResponse>>;
    /**
     * Returns the active draft and its validation. </br> **Note:** These endpoints are currently in beta and might be subject to changes. If you want to participate and learn more about the Fireblocks TAP, please contact your Fireblocks Customer Success Manager or send an email to CSM@fireblocks.com.
     * @summary Get the active draft
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getDraft(options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<DraftReviewAndValidationResponse>>;
    /**
     * Send publish request of certain draft id and returns the response. </br> **Note:** These endpoints are currently in beta and might be subject to changes. If you want to participate and learn more about the Fireblocks TAP, please contact your Fireblocks Customer Success Manager or send an email to CSM@fireblocks.com.
     * @summary Send publish request for a certain draft id
     * @param {PublishDraftRequest} publishDraftRequest
     * @param {string} [idempotencyKey] A unique identifier for the request. If the request is sent multiple times with the same idempotency key, the server will return the same response as the first request. The idempotency key is valid for 24 hours.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    publishDraft(publishDraftRequest: PublishDraftRequest, idempotencyKey?: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PublishResult>>;
    /**
     * Send publish request of set of policy rules and returns the response. </br> **Note:** These endpoints are currently in beta and might be subject to changes. If you want to participate and learn more about the Fireblocks TAP, please contact your Fireblocks Customer Success Manager or send an email to CSM@fireblocks.com.
     * @summary Send publish request for a set of policy rules
     * @param {PolicyRules} policyRules
     * @param {string} [idempotencyKey] A unique identifier for the request. If the request is sent multiple times with the same idempotency key, the server will return the same response as the first request. The idempotency key is valid for 24 hours.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    publishPolicyRules(policyRules: PolicyRules, idempotencyKey?: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PublishResult>>;
    /**
     * Update the draft and return its validation. </br> **Note:** These endpoints are currently in beta and might be subject to changes. If you want to participate and learn more about the Fireblocks TAP, please contact your Fireblocks Customer Success Manager or send an email to CSM@fireblocks.com.
     * @summary Update the draft with a new set of rules
     * @param {PolicyRules} policyRules
     * @param {string} [idempotencyKey] A unique identifier for the request. If the request is sent multiple times with the same idempotency key, the server will return the same response as the first request. The idempotency key is valid for 24 hours.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateDraft(policyRules: PolicyRules, idempotencyKey?: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<DraftReviewAndValidationResponse>>;
};
/**
 * PolicyEditorBetaApi - factory interface
 * @export
 */
export declare const PolicyEditorBetaApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Returns the active policy and its validation. </br> **Note:** These endpoints are currently in beta and might be subject to changes. If you want to participate and learn more about the Fireblocks TAP, please contact your Fireblocks Customer Success Manager or send an email to CSM@fireblocks.com.
     * @summary Get the active policy and its validation
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getActivePolicy(options?: RawAxiosRequestConfig): AxiosPromise<PolicyAndValidationResponse>;
    /**
     * Returns the active draft and its validation. </br> **Note:** These endpoints are currently in beta and might be subject to changes. If you want to participate and learn more about the Fireblocks TAP, please contact your Fireblocks Customer Success Manager or send an email to CSM@fireblocks.com.
     * @summary Get the active draft
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getDraft(options?: RawAxiosRequestConfig): AxiosPromise<DraftReviewAndValidationResponse>;
    /**
     * Send publish request of certain draft id and returns the response. </br> **Note:** These endpoints are currently in beta and might be subject to changes. If you want to participate and learn more about the Fireblocks TAP, please contact your Fireblocks Customer Success Manager or send an email to CSM@fireblocks.com.
     * @summary Send publish request for a certain draft id
     * @param {PolicyEditorBetaApiPublishDraftRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    publishDraft(requestParameters: PolicyEditorBetaApiPublishDraftRequest, options?: RawAxiosRequestConfig): AxiosPromise<PublishResult>;
    /**
     * Send publish request of set of policy rules and returns the response. </br> **Note:** These endpoints are currently in beta and might be subject to changes. If you want to participate and learn more about the Fireblocks TAP, please contact your Fireblocks Customer Success Manager or send an email to CSM@fireblocks.com.
     * @summary Send publish request for a set of policy rules
     * @param {PolicyEditorBetaApiPublishPolicyRulesRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    publishPolicyRules(requestParameters: PolicyEditorBetaApiPublishPolicyRulesRequest, options?: RawAxiosRequestConfig): AxiosPromise<PublishResult>;
    /**
     * Update the draft and return its validation. </br> **Note:** These endpoints are currently in beta and might be subject to changes. If you want to participate and learn more about the Fireblocks TAP, please contact your Fireblocks Customer Success Manager or send an email to CSM@fireblocks.com.
     * @summary Update the draft with a new set of rules
     * @param {PolicyEditorBetaApiUpdateDraftRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateDraft(requestParameters: PolicyEditorBetaApiUpdateDraftRequest, options?: RawAxiosRequestConfig): AxiosPromise<DraftReviewAndValidationResponse>;
};
/**
 * Request parameters for publishDraft operation in PolicyEditorBetaApi.
 * @export
 * @interface PolicyEditorBetaApiPublishDraftRequest
 */
export interface PolicyEditorBetaApiPublishDraftRequest {
    /**
     *
     * @type {PublishDraftRequest}
     * @memberof PolicyEditorBetaApiPublishDraft
     */
    readonly publishDraftRequest: PublishDraftRequest;
    /**
     * A unique identifier for the request. If the request is sent multiple times with the same idempotency key, the server will return the same response as the first request. The idempotency key is valid for 24 hours.
     * @type {string}
     * @memberof PolicyEditorBetaApiPublishDraft
     */
    readonly idempotencyKey?: string;
}
/**
 * Request parameters for publishPolicyRules operation in PolicyEditorBetaApi.
 * @export
 * @interface PolicyEditorBetaApiPublishPolicyRulesRequest
 */
export interface PolicyEditorBetaApiPublishPolicyRulesRequest {
    /**
     *
     * @type {PolicyRules}
     * @memberof PolicyEditorBetaApiPublishPolicyRules
     */
    readonly policyRules: PolicyRules;
    /**
     * A unique identifier for the request. If the request is sent multiple times with the same idempotency key, the server will return the same response as the first request. The idempotency key is valid for 24 hours.
     * @type {string}
     * @memberof PolicyEditorBetaApiPublishPolicyRules
     */
    readonly idempotencyKey?: string;
}
/**
 * Request parameters for updateDraft operation in PolicyEditorBetaApi.
 * @export
 * @interface PolicyEditorBetaApiUpdateDraftRequest
 */
export interface PolicyEditorBetaApiUpdateDraftRequest {
    /**
     *
     * @type {PolicyRules}
     * @memberof PolicyEditorBetaApiUpdateDraft
     */
    readonly policyRules: PolicyRules;
    /**
     * A unique identifier for the request. If the request is sent multiple times with the same idempotency key, the server will return the same response as the first request. The idempotency key is valid for 24 hours.
     * @type {string}
     * @memberof PolicyEditorBetaApiUpdateDraft
     */
    readonly idempotencyKey?: string;
}
/**
 * PolicyEditorBetaApi - object-oriented interface
 * @export
 * @class PolicyEditorBetaApi
 * @extends {BaseAPI}
 */
export declare class PolicyEditorBetaApi extends BaseAPI {
    /**
     * Returns the active policy and its validation. </br> **Note:** These endpoints are currently in beta and might be subject to changes. If you want to participate and learn more about the Fireblocks TAP, please contact your Fireblocks Customer Success Manager or send an email to CSM@fireblocks.com.
     * @summary Get the active policy and its validation
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PolicyEditorBetaApi
     */
    getActivePolicy(): Promise<import("../response/fireblocksResponse").FireblocksResponse<PolicyAndValidationResponse>>;
    /**
     * Returns the active draft and its validation. </br> **Note:** These endpoints are currently in beta and might be subject to changes. If you want to participate and learn more about the Fireblocks TAP, please contact your Fireblocks Customer Success Manager or send an email to CSM@fireblocks.com.
     * @summary Get the active draft
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PolicyEditorBetaApi
     */
    getDraft(): Promise<import("../response/fireblocksResponse").FireblocksResponse<DraftReviewAndValidationResponse>>;
    /**
     * Send publish request of certain draft id and returns the response. </br> **Note:** These endpoints are currently in beta and might be subject to changes. If you want to participate and learn more about the Fireblocks TAP, please contact your Fireblocks Customer Success Manager or send an email to CSM@fireblocks.com.
     * @summary Send publish request for a certain draft id
     * @param {PolicyEditorBetaApiPublishDraftRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PolicyEditorBetaApi
     */
    publishDraft(requestParameters: PolicyEditorBetaApiPublishDraftRequest): Promise<import("../response/fireblocksResponse").FireblocksResponse<PublishResult>>;
    /**
     * Send publish request of set of policy rules and returns the response. </br> **Note:** These endpoints are currently in beta and might be subject to changes. If you want to participate and learn more about the Fireblocks TAP, please contact your Fireblocks Customer Success Manager or send an email to CSM@fireblocks.com.
     * @summary Send publish request for a set of policy rules
     * @param {PolicyEditorBetaApiPublishPolicyRulesRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PolicyEditorBetaApi
     */
    publishPolicyRules(requestParameters: PolicyEditorBetaApiPublishPolicyRulesRequest): Promise<import("../response/fireblocksResponse").FireblocksResponse<PublishResult>>;
    /**
     * Update the draft and return its validation. </br> **Note:** These endpoints are currently in beta and might be subject to changes. If you want to participate and learn more about the Fireblocks TAP, please contact your Fireblocks Customer Success Manager or send an email to CSM@fireblocks.com.
     * @summary Update the draft with a new set of rules
     * @param {PolicyEditorBetaApiUpdateDraftRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PolicyEditorBetaApi
     */
    updateDraft(requestParameters: PolicyEditorBetaApiUpdateDraftRequest): Promise<import("../response/fireblocksResponse").FireblocksResponse<DraftReviewAndValidationResponse>>;
}
