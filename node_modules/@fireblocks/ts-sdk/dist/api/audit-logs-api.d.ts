/**
 * Fireblocks API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.2
 * Contact: support@fireblocks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from '../configuration';
import type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios';
import { RequestArgs, BaseAPI } from '../base';
import { GetAuditLogsResponse } from '../models';
/**
 * AuditLogsApi - axios parameter creator
 * @export
 */
export declare const AuditLogsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Get all audits
     * @summary Get audit logs
     * @param {GetAuditLogsTimePeriodEnum} [timePeriod] The last time period to fetch audit logs
     * @param {string} [cursor] The next id to start fetch audit logs from
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getAuditLogs: (timePeriod?: GetAuditLogsTimePeriodEnum, cursor?: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * AuditLogsApi - functional programming interface
 * @export
 */
export declare const AuditLogsApiFp: (configuration?: Configuration) => {
    /**
     * Get all audits
     * @summary Get audit logs
     * @param {GetAuditLogsTimePeriodEnum} [timePeriod] The last time period to fetch audit logs
     * @param {string} [cursor] The next id to start fetch audit logs from
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getAuditLogs(timePeriod?: GetAuditLogsTimePeriodEnum, cursor?: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetAuditLogsResponse>>;
};
/**
 * AuditLogsApi - factory interface
 * @export
 */
export declare const AuditLogsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Get all audits
     * @summary Get audit logs
     * @param {AuditLogsApiGetAuditLogsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getAuditLogs(requestParameters?: AuditLogsApiGetAuditLogsRequest, options?: RawAxiosRequestConfig): AxiosPromise<GetAuditLogsResponse>;
};
/**
 * Request parameters for getAuditLogs operation in AuditLogsApi.
 * @export
 * @interface AuditLogsApiGetAuditLogsRequest
 */
export interface AuditLogsApiGetAuditLogsRequest {
    /**
     * The last time period to fetch audit logs
     * @type {'DAY' | 'WEEK'}
     * @memberof AuditLogsApiGetAuditLogs
     */
    readonly timePeriod?: GetAuditLogsTimePeriodEnum;
    /**
     * The next id to start fetch audit logs from
     * @type {string}
     * @memberof AuditLogsApiGetAuditLogs
     */
    readonly cursor?: string;
}
/**
 * AuditLogsApi - object-oriented interface
 * @export
 * @class AuditLogsApi
 * @extends {BaseAPI}
 */
export declare class AuditLogsApi extends BaseAPI {
    /**
     * Get all audits
     * @summary Get audit logs
     * @param {AuditLogsApiGetAuditLogsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AuditLogsApi
     */
    getAuditLogs(requestParameters?: AuditLogsApiGetAuditLogsRequest): Promise<import("../response/fireblocksResponse").FireblocksResponse<GetAuditLogsResponse>>;
}
/**
 * @export
 */
export declare const GetAuditLogsTimePeriodEnum: {
    readonly Day: "DAY";
    readonly Week: "WEEK";
};
export type GetAuditLogsTimePeriodEnum = typeof GetAuditLogsTimePeriodEnum[keyof typeof GetAuditLogsTimePeriodEnum];
