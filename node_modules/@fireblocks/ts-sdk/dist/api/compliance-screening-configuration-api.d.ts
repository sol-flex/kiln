/**
 * Fireblocks API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.2
 * Contact: support@fireblocks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from '../configuration';
import type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios';
import { RequestArgs, BaseAPI } from '../base';
import { ScreeningConfigurationsRequest } from '../models';
/**
 * ComplianceScreeningConfigurationApi - axios parameter creator
 * @export
 */
export declare const ComplianceScreeningConfigurationApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Retrieves the configuration for Travel Rule screening policy.
     * @summary Get AML Screening Policy Configuration
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getAmlScreeningConfiguration: (options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Retrieves the configuration for Travel Rule screening policy.
     * @summary Get Travel Rule Screening Policy Configuration
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getScreeningConfiguration: (options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * ComplianceScreeningConfigurationApi - functional programming interface
 * @export
 */
export declare const ComplianceScreeningConfigurationApiFp: (configuration?: Configuration) => {
    /**
     * Retrieves the configuration for Travel Rule screening policy.
     * @summary Get AML Screening Policy Configuration
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getAmlScreeningConfiguration(options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ScreeningConfigurationsRequest>>;
    /**
     * Retrieves the configuration for Travel Rule screening policy.
     * @summary Get Travel Rule Screening Policy Configuration
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getScreeningConfiguration(options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ScreeningConfigurationsRequest>>;
};
/**
 * ComplianceScreeningConfigurationApi - factory interface
 * @export
 */
export declare const ComplianceScreeningConfigurationApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Retrieves the configuration for Travel Rule screening policy.
     * @summary Get AML Screening Policy Configuration
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getAmlScreeningConfiguration(options?: RawAxiosRequestConfig): AxiosPromise<ScreeningConfigurationsRequest>;
    /**
     * Retrieves the configuration for Travel Rule screening policy.
     * @summary Get Travel Rule Screening Policy Configuration
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getScreeningConfiguration(options?: RawAxiosRequestConfig): AxiosPromise<ScreeningConfigurationsRequest>;
};
/**
 * ComplianceScreeningConfigurationApi - object-oriented interface
 * @export
 * @class ComplianceScreeningConfigurationApi
 * @extends {BaseAPI}
 */
export declare class ComplianceScreeningConfigurationApi extends BaseAPI {
    /**
     * Retrieves the configuration for Travel Rule screening policy.
     * @summary Get AML Screening Policy Configuration
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ComplianceScreeningConfigurationApi
     */
    getAmlScreeningConfiguration(): Promise<import("../response/fireblocksResponse").FireblocksResponse<ScreeningConfigurationsRequest>>;
    /**
     * Retrieves the configuration for Travel Rule screening policy.
     * @summary Get Travel Rule Screening Policy Configuration
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ComplianceScreeningConfigurationApi
     */
    getScreeningConfiguration(): Promise<import("../response/fireblocksResponse").FireblocksResponse<ScreeningConfigurationsRequest>>;
}
