/**
 * Fireblocks API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.2
 * Contact: support@fireblocks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from '../configuration';
import type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios';
import { RequestArgs, BaseAPI } from '../base';
import { ResendTransactionWebhooksRequest } from '../models';
import { ResendWebhooksByTransactionIdResponse } from '../models';
import { ResendWebhooksResponse } from '../models';
/**
 * WebhooksApi - axios parameter creator
 * @export
 */
export declare const WebhooksApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Resends failed webhook notifications for a transaction by ID.
     * @summary Resend failed webhooks for a transaction by ID
     * @param {ResendTransactionWebhooksRequest} resendTransactionWebhooksRequest
     * @param {string} txId The ID of the transaction for webhooks
     * @param {string} [idempotencyKey] A unique identifier for the request. If the request is sent multiple times with the same idempotency key, the server will return the same response as the first request. The idempotency key is valid for 24 hours.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    resendTransactionWebhooks: (resendTransactionWebhooksRequest: ResendTransactionWebhooksRequest, txId: string, idempotencyKey?: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Resends all failed webhook notifications.
     * @summary Resend failed webhooks
     * @param {string} [idempotencyKey] A unique identifier for the request. If the request is sent multiple times with the same idempotency key, the server will return the same response as the first request. The idempotency key is valid for 24 hours.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    resendWebhooks: (idempotencyKey?: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * WebhooksApi - functional programming interface
 * @export
 */
export declare const WebhooksApiFp: (configuration?: Configuration) => {
    /**
     * Resends failed webhook notifications for a transaction by ID.
     * @summary Resend failed webhooks for a transaction by ID
     * @param {ResendTransactionWebhooksRequest} resendTransactionWebhooksRequest
     * @param {string} txId The ID of the transaction for webhooks
     * @param {string} [idempotencyKey] A unique identifier for the request. If the request is sent multiple times with the same idempotency key, the server will return the same response as the first request. The idempotency key is valid for 24 hours.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    resendTransactionWebhooks(resendTransactionWebhooksRequest: ResendTransactionWebhooksRequest, txId: string, idempotencyKey?: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ResendWebhooksByTransactionIdResponse>>;
    /**
     * Resends all failed webhook notifications.
     * @summary Resend failed webhooks
     * @param {string} [idempotencyKey] A unique identifier for the request. If the request is sent multiple times with the same idempotency key, the server will return the same response as the first request. The idempotency key is valid for 24 hours.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    resendWebhooks(idempotencyKey?: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ResendWebhooksResponse>>;
};
/**
 * WebhooksApi - factory interface
 * @export
 */
export declare const WebhooksApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Resends failed webhook notifications for a transaction by ID.
     * @summary Resend failed webhooks for a transaction by ID
     * @param {WebhooksApiResendTransactionWebhooksRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    resendTransactionWebhooks(requestParameters: WebhooksApiResendTransactionWebhooksRequest, options?: RawAxiosRequestConfig): AxiosPromise<ResendWebhooksByTransactionIdResponse>;
    /**
     * Resends all failed webhook notifications.
     * @summary Resend failed webhooks
     * @param {WebhooksApiResendWebhooksRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    resendWebhooks(requestParameters?: WebhooksApiResendWebhooksRequest, options?: RawAxiosRequestConfig): AxiosPromise<ResendWebhooksResponse>;
};
/**
 * Request parameters for resendTransactionWebhooks operation in WebhooksApi.
 * @export
 * @interface WebhooksApiResendTransactionWebhooksRequest
 */
export interface WebhooksApiResendTransactionWebhooksRequest {
    /**
     *
     * @type {ResendTransactionWebhooksRequest}
     * @memberof WebhooksApiResendTransactionWebhooks
     */
    readonly resendTransactionWebhooksRequest: ResendTransactionWebhooksRequest;
    /**
     * The ID of the transaction for webhooks
     * @type {string}
     * @memberof WebhooksApiResendTransactionWebhooks
     */
    readonly txId: string;
    /**
     * A unique identifier for the request. If the request is sent multiple times with the same idempotency key, the server will return the same response as the first request. The idempotency key is valid for 24 hours.
     * @type {string}
     * @memberof WebhooksApiResendTransactionWebhooks
     */
    readonly idempotencyKey?: string;
}
/**
 * Request parameters for resendWebhooks operation in WebhooksApi.
 * @export
 * @interface WebhooksApiResendWebhooksRequest
 */
export interface WebhooksApiResendWebhooksRequest {
    /**
     * A unique identifier for the request. If the request is sent multiple times with the same idempotency key, the server will return the same response as the first request. The idempotency key is valid for 24 hours.
     * @type {string}
     * @memberof WebhooksApiResendWebhooks
     */
    readonly idempotencyKey?: string;
}
/**
 * WebhooksApi - object-oriented interface
 * @export
 * @class WebhooksApi
 * @extends {BaseAPI}
 */
export declare class WebhooksApi extends BaseAPI {
    /**
     * Resends failed webhook notifications for a transaction by ID.
     * @summary Resend failed webhooks for a transaction by ID
     * @param {WebhooksApiResendTransactionWebhooksRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WebhooksApi
     */
    resendTransactionWebhooks(requestParameters: WebhooksApiResendTransactionWebhooksRequest): Promise<import("../response/fireblocksResponse").FireblocksResponse<ResendWebhooksByTransactionIdResponse>>;
    /**
     * Resends all failed webhook notifications.
     * @summary Resend failed webhooks
     * @param {WebhooksApiResendWebhooksRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WebhooksApi
     */
    resendWebhooks(requestParameters?: WebhooksApiResendWebhooksRequest): Promise<import("../response/fireblocksResponse").FireblocksResponse<ResendWebhooksResponse>>;
}
