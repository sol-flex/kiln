/**
 * Fireblocks API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.2
 * Contact: support@fireblocks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from '../configuration';
import type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios';
import { RequestArgs, BaseAPI } from '../base';
import { GetWhitelistIpAddressesResponse } from '../models';
/**
 * WhitelistIpAddressesApi - axios parameter creator
 * @export
 */
export declare const WhitelistIpAddressesApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Gets whitelisted ip addresses for given Api user.
     * @summary Gets whitelisted ip addresses
     * @param {string} userId The ID of the api user
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getWhitelistIpAddresses: (userId: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * WhitelistIpAddressesApi - functional programming interface
 * @export
 */
export declare const WhitelistIpAddressesApiFp: (configuration?: Configuration) => {
    /**
     * Gets whitelisted ip addresses for given Api user.
     * @summary Gets whitelisted ip addresses
     * @param {string} userId The ID of the api user
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getWhitelistIpAddresses(userId: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetWhitelistIpAddressesResponse>>;
};
/**
 * WhitelistIpAddressesApi - factory interface
 * @export
 */
export declare const WhitelistIpAddressesApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Gets whitelisted ip addresses for given Api user.
     * @summary Gets whitelisted ip addresses
     * @param {WhitelistIpAddressesApiGetWhitelistIpAddressesRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getWhitelistIpAddresses(requestParameters: WhitelistIpAddressesApiGetWhitelistIpAddressesRequest, options?: RawAxiosRequestConfig): AxiosPromise<GetWhitelistIpAddressesResponse>;
};
/**
 * Request parameters for getWhitelistIpAddresses operation in WhitelistIpAddressesApi.
 * @export
 * @interface WhitelistIpAddressesApiGetWhitelistIpAddressesRequest
 */
export interface WhitelistIpAddressesApiGetWhitelistIpAddressesRequest {
    /**
     * The ID of the api user
     * @type {string}
     * @memberof WhitelistIpAddressesApiGetWhitelistIpAddresses
     */
    readonly userId: string;
}
/**
 * WhitelistIpAddressesApi - object-oriented interface
 * @export
 * @class WhitelistIpAddressesApi
 * @extends {BaseAPI}
 */
export declare class WhitelistIpAddressesApi extends BaseAPI {
    /**
     * Gets whitelisted ip addresses for given Api user.
     * @summary Gets whitelisted ip addresses
     * @param {WhitelistIpAddressesApiGetWhitelistIpAddressesRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WhitelistIpAddressesApi
     */
    getWhitelistIpAddresses(requestParameters: WhitelistIpAddressesApiGetWhitelistIpAddressesRequest): Promise<import("../response/fireblocksResponse").FireblocksResponse<GetWhitelistIpAddressesResponse>>;
}
