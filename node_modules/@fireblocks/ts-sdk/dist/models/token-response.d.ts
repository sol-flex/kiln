/**
 * Fireblocks API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.2
 * Contact: support@fireblocks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { MediaEntityResponse } from './media-entity-response';
import { SpamTokenResponse } from './spam-token-response';
import { TokenCollectionResponse } from './token-collection-response';
/**
 *
 * @export
 * @interface TokenResponse
 */
export interface TokenResponse {
    /**
     * The Fireblocks NFT asset id
     * @type {string}
     * @memberof TokenResponse
     */
    'id': string;
    /**
     * Token id within the contract/collection
     * @type {string}
     * @memberof TokenResponse
     */
    'tokenId': string;
    /**
     * ERC721 / ERC1155
     * @type {string}
     * @memberof TokenResponse
     */
    'standard': string;
    /**
     *
     * @type {string}
     * @memberof TokenResponse
     */
    'blockchainDescriptor': TokenResponseBlockchainDescriptorEnum;
    /**
     * URL of the original token JSON metadata
     * @type {string}
     * @memberof TokenResponse
     */
    'metadataURI'?: string;
    /**
     * URL of the cached token JSON metadata
     * @type {string}
     * @memberof TokenResponse
     */
    'cachedMetadataURI'?: string;
    /**
     * Media items extracted from metadata JSON
     * @type {Array<MediaEntityResponse>}
     * @memberof TokenResponse
     */
    'media'?: Array<MediaEntityResponse>;
    /**
     * Token spam status
     * @type {SpamTokenResponse}
     * @memberof TokenResponse
     */
    'spam'?: SpamTokenResponse;
    /**
     * Parent collection information
     * @type {TokenCollectionResponse}
     * @memberof TokenResponse
     */
    'collection'?: TokenCollectionResponse;
    /**
     *
     * @type {string}
     * @memberof TokenResponse
     */
    'description'?: string;
    /**
     *
     * @type {string}
     * @memberof TokenResponse
     */
    'name'?: string;
}
export declare const TokenResponseBlockchainDescriptorEnum: {
    readonly Eth: "ETH";
    readonly EthTest3: "ETH_TEST3";
    readonly EthTest5: "ETH_TEST5";
    readonly EthTest6: "ETH_TEST6";
    readonly Polygon: "POLYGON";
    readonly PolygonTestMumbai: "POLYGON_TEST_MUMBAI";
    readonly AmoyPolygonTest: "AMOY_POLYGON_TEST";
    readonly Xtz: "XTZ";
    readonly XtzTest: "XTZ_TEST";
    readonly BasechainEth: "BASECHAIN_ETH";
    readonly BasechainEthTest3: "BASECHAIN_ETH_TEST3";
    readonly Etherlink: "ETHERLINK";
    readonly EtherlinkTest: "ETHERLINK_TEST";
    readonly Mantle: "MANTLE";
    readonly MantleTest: "MANTLE_TEST";
    readonly GunGunzillaTest: "GUN_GUNZILLA_TEST";
};
export type TokenResponseBlockchainDescriptorEnum = typeof TokenResponseBlockchainDescriptorEnum[keyof typeof TokenResponseBlockchainDescriptorEnum];
