/**
 * Convert wei to ETH
 */
export declare const weiToEth: (wei: bigint) => string;
/**
 * Convert wei to POL
 */
export declare const weiToPol: (wei: bigint) => string;
/**
 * Convert lamports to SOL
 */
export declare const lamportsToSol: (lamports: bigint) => string;
/**
 * Convert SOL to lamports
 */
export declare const solToLamports: (sol: string) => bigint;
/**
 * Convert XTZ to mutez
 */
export declare const xtzToMutez: (xtz: string) => bigint;
/**
 * Convert Cardano lovelace to ADA
 */
export declare const lovelaceToAda: (lovelace: bigint) => string;
/**
 * Converts yocto to NEAR
 */
export declare const yoctoToNear: (yocto: bigint) => string;
/**
 * Convert nanoTON to TON
 */
export declare const nanotonToTon: (nanoton: bigint) => string;
/**
 * Convert TON to nanoTON
 */
export declare const tonToNanoton: (ton: string) => bigint;
/**
 * Convert KAVA to uKAVA
 */
export declare const kavaToUkava: (kava: string) => bigint;
/**
 * Convert OM to uOM
 */
export declare const omToUom: (om: string) => bigint;
/**
 * Convert CRO to basecro
 */
export declare const croToBasecro: (cro: string) => bigint;
/**
 * Convert uZETA to ZETA
 */
export declare const uzetaToZeta: (uzeta: bigint) => string;
/**
 * Convert uINJ to INJ
 */
export declare const uinjToInj: (uinj: bigint) => string;
/**
 * Convert aFET to FET
 */
export declare const afetToFet: (afet: bigint) => string;
/**
 * Convert uFET to FET
 */
export declare const ufetToFet: (ufet: bigint) => string;
/**
 * Convert mutez to XTZ
 */
export declare const mutezToXtz: (mutez: bigint) => string;
/**
 * Convert uDYDX to DYDX
 */
export declare const udydxToDydx: (udydx: bigint) => string;
/**
 * Convert planck to DOT
 */
export declare const planckToDot: (planck: bigint) => string;
/**
 * Convert planck to KSM
 */
export declare const planckToKsm: (planck: bigint) => string;
/**
 * Convert uATOM to ATOM
 */
export declare const uatomToAtom: (uatom: bigint) => string;
/**
 * Convert u{Cosmos chain token: ATOM, OSMO, etc...} to {Cosmos chain token: ATOM, OSMO, etc...}
 */
export declare const uunitToUnit: (uunit: bigint) => string;
/**
 * Convert Satoshi to BTC
 */
export declare const satToBtc: (sat: bigint) => string;
/**
 * Convert BTC to Satoshi
 */
export declare const btcToSat: (btc: string) => bigint;
/**
 * Convert uOSMO to OSMO
 */
export declare const uosmoToOsmo: (uosmo: bigint) => string;
/**
 * Convert uTIA to TIA
 */
export declare const utiaToTia: (utia: bigint) => string;
/**
 * Convert uusdc to USDC
 */
export declare const uusdcToUsdc: (uusdc: bigint) => string;
/**
 * Convert USDC to uUSDC
 */
export declare const usdcToUusdc: (usdc: string) => bigint;
/**
 * Convert uKAVA to KAVA
 */
export declare const ukavaToKava: (ukava: bigint) => string;
/**
 * Convert uOM to OM
 */
export declare const uomToOm: (uom: bigint) => string;
/**
 * Convert basecro to CRO
 */
export declare const basecroToCro: (basecro: bigint) => string;
/**
 * Get a cosmos address from its public key and prefix
 * @param pubkey
 * @param prefix
 */
export declare const getCosmosAddress: (pubkey: string, prefix: string) => string;
/**
 * Compress a cosmos public key
 * @param pubkey
 */
export declare const compressPublicKey: (pubkey: string) => string;
/**
 * Convert ATOM to uATOM
 */
export declare const atomToUatom: (atom: string) => bigint;
/**
 * Convert DYDX to adydx
 */
export declare const dydxToAdydx: (dydx: string) => bigint;
/**
 * Convert ZETA to azeta
 */
export declare const zetaToAzeta: (zeta: string) => bigint;
/**
 * Convert OSMO to uosmo
 */
export declare const osmoToUosmo: (osmo: string) => bigint;
/**
 * Convert INJ to inj
 */
export declare const injToInj: (inj: string) => bigint;
/**
 * Convert TIA to utia
 */
export declare const tiaToUtia: (tia: string) => bigint;
/**
 * Convert FET to afet
 */
export declare const fetToAfet: (fet: string) => bigint;
/**
 * Convert TRX to sun
 */
export declare const trxToSun: (trx: string) => bigint;
/**
 * Convert sun to TRX
 */
export declare const sunToTrx: (trx: bigint) => string;
//# sourceMappingURL=utils.d.ts.map